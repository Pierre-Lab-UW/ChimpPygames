Truncated Process:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1. Copy driver file to desktop & expand zipped file
	Copy driver file from flashdrive to desktop
	Open terminal
$ cd Desktop
$ sudo tar xvf SW602822_Elo_Linux_MT_USB_Driver_v4.1.0.0_armv7l.tar

2. Installation:

$ sudo cp -r ./bin-mt-usb/  /etc/opt/elo-mt-usb  #This creates this file in the etc/bin location.
$ cd /etc/opt/elo-mt-usb
$ sudo chmod 777 *
$ sudo chmod 444 *.txt

$ sudo cp /etc/opt/elo-mt-usb/99-elotouch.rules /etc/udev/rules.d
$ uname -r
$ ls -l /etc/opt/elo-mt-usb/*.ko

3. Install a script to invoke Elo service through systemd init at system startup.
$ sudo ps -eaf | grep [s]ystemd
$ sudo ps -eaf | grep init
$ ls -1 /sbin/init

# If systemd init is active (blue font), copy and enable the elo.service systemd script to load the elo driver at startup.
$ sudo cp /etc/opt/elo-mt-usb/elo.service /etc/systemd/system/
$ sudo systemctl enable elo.service
$ sudo systemctl status elo.service

# Should say Loaded: loaded (/etc/systemd/system/elo.service; enabled; vendor preset: enabled)
   Active: inactive (dead)


4. Reboot to complete driver installation
$ sudo reboot or sudo shutdown -r now


5. Edit script file to change the input setting
Open file etc/opt/elo-mt-usb
find and open the loadEloMultiTouchUSB.sh file in text editor
change the bottom line from --mtdigitizer to --absmouse 

# This has the input device send mouse events for the primary touch only (no more Ikea bad-monkey swipes!))





Full Unabridged Process: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#1. Update packages:
#$ sudo apt-get update
#$ sudo apt-get upgrade

# May have to repeatedly get update and try --fix-missing before you can use evtest

2. Copy driver file to desktop & expand zipped file
	Copy driver file from flashdrive to desktop
	Open terminal
$ cd Desktop
$ sudo tar xvf SW602822_Elo_Linux_MT_USB_Driver_v4.1.0.0_armv7l.tar

3. Installation:

$ sudo cp -r ./bin-mt-usb/  /etc/opt/elo-mt-usb  #This creates this file in the etc/bin location.
$ cd /etc/opt/elo-mt-usb
$ sudo chmod 777 *
$ sudo chmod 444 *.txt

$ sudo cp /etc/opt/elo-mt-usb/99-elotouch.rules /etc/udev/rules.d
$ uname -r
$ ls -l /etc/opt/elo-mt-usb/*.ko

4. Install a script to invoke Elo service through systemd init at system startup.
$ sudo ps -eaf | grep [s]ystemd
$ sudo ps -eaf | grep init
$ ls -1 /sbin/init

# If systemd init is active (blue font), copy and enable the elo.service systemd script to load the elo driver at startup.
$ sudo cp /etc/opt/elo-mt-usb/elo.service /etc/systemd/system/
$ sudo systemctl enable elo.service
$ sudo systemctl status elo.service

# Should say Loaded: loaded (/etc/systemd/system/elo.service; enabled; vendor preset: enabled)
   Active: inactive (dead)


5. Reboot to complete driver installation
$ sudo reboot or sudo shutdown -r now

#6. Download evtest program to check how the touchscreen reads touches.
# First, connect to the internet
#$ sudo apt-get install evtest
	do you want to continue? y
#$ sudo apt-get update --fix-missing
#$ sudo apt-get upgrade
#$ sudo reboot

#Open terminal again and run ev test
#$ evtest
## If more than one touchscreen are listed with devices (atmel maxTouch Digitizer):
#$ cat /proc/bus/input/devices
## try 0 and touch the screen to see if it logs activity 

7. Edit script file to change the input setting
Open file etc/opt/elo-mt-usb
find and open the loadEloMultiTouchUSB.sh file in text editor
change the bottom line from --mtdigitizer to --absmouse 

# This has the input device send mouse events for the primary touch only (no more Ikea bad-monkey swipes!))




Original ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Full Instructions for Deploying ELO driver for 2515 from rpi forum for reference:

First, update packages
$ sudo mount -o rw,remount /boot
$ sudo apt-get update
$ sudo apt-get upgrade

Install kernel headers
$ sudo apt-get install raspberrypi-kernel-headers

Download ELO driver
https://www.elotouch.com/support/downloads#/category/346LYmeuAUEI4Qa0sSyiSa/os/3JOU2VmTG8qgYWYIeEsGk2 

I downloaded the 2.6.1 ARM multi-touch driver (note that version #'s and links change… you may need to search ELO's site again and figure out the links. But the steps should be the same)

$ mkdir src
$ cd src
$ wget https://assets.ctfassets.net/of6pv6scuh5x/VTFvAiEmsb3IEzzCrcc0e/046ba0022ca5d8a9c9ec8c366f7f80a2/SW602654_Elo_Linux_MT_USB_Driver_v2.6.1_armv7l.tar 
$ tar xvf SW602654_Elo_Linux_MT_USB_Driver_v2.6.1_armv7l.tar

Options… in bin-mt-usb directory is a readme.txt . It has the installation instructions. I was logged in via Putty, so I started a screen session so I could have one bash session for scrolling the documentation and one to execute the commands. Do what feels good to you.
$ screen
<ENTER>
c-a c
less ./bin-mt-usb/readme.txt
c-a n
Use c-a n (ctrl-a next) to flip back and forth between command area and readme

Installation:

$ sudo cp -r ./bin-mt-usb/  /etc/opt/elo-mt-usb
$ cd /etc/opt/elo-mt-usb
$ sudo chmod 777 *
$ sudo chmod 444 *.txt

$ sudo cp /etc/opt/elo-mt-usb/99-elotouch.rules /etc/udev/rules.d

$ uname -r
 $ ls -l /etc/opt/elo-mt-usb/*.ko
ls: cannot access '/etc/opt/elo-mt-usb/*.ko': No such file or directory

This means you have to build a kernel module that loads into YOUR kernel. That means you need correct kernel headers for your kernel which is why I ran the command above to install the kernel headers. Hopefully those are for my kernel.

$ cd /etc/opt/elo-mt-usb/elo_mt_input_mod_src
$ make
make -C /lib/modules/4.19.66-v7+/build SUBDIRS=/etc/opt/elo-mt-usb/elo_mt_input_mod_src modules
make[1]: Entering directory '/usr/src/linux-headers-4.19.66-v7+'
  CC [M]  /etc/opt/elo-mt-usb/elo_mt_input_mod_src/elo_mt_input.o
  LD [M]  /etc/opt/elo-mt-usb/elo_mt_input_mod_src/elo_mt_input_mod.o
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /etc/opt/elo-mt-usb/elo_mt_input_mod_src/elo_mt_input_mod.mod.o
  LD [M]  /etc/opt/elo-mt-usb/elo_mt_input_mod_src/elo_mt_input_mod.ko
make[1]: Leaving directory '/usr/src/linux-headers-4.19.66-v7+'

Beautiful.

$ sudo make install

My system uses systemd, so I followed the systemd steps to install the elo whatever-it-does service.

$ sudo cp /etc/opt/elo-mt-usb/elo.service /etc/systemd/system/
$ sudo systemctl enable elo.service
Created symlink /etc/systemd/system/graphical.target.wants/elo.service → /etc/systemd/system/elo.service.
 $ sudo systemctl status elo.service
● elo.service - Invoke Elo service at system startup.
   Loaded: loaded (/etc/systemd/system/elo.service; enabled; vendor preset: enabled)
   Active: inactive (dead)

Instructions want you to reboot. There goes your uptime. Whatever.

I want to find my way back there though so I
$ pwd
/home/pi/src/bin-mt-usb
Before I
$ sudo reboot

Calibration
$ sudo chown pi:pi /dev/elo-mt-usb
$ cd /etc/opt/elo-mt-usb
$ DISPLAY=:0.0 ./elova

At this point you would think the monitor would be calibrated, but for me it wasn't mapped properly. It needed flipped or rotated… or something. In my case the display is mounted portrait, which I set in the /boot/config.txt

In my case my problem was solved with the xinput_calibrator tool. So you can try this:
 $ DISPLAY=:0.0 xinput_calibrator --output-type xinput
        Setting calibration data: 0, 4095, 0, 4095
Calibrating EVDEV driver for "Elo MultiTouch(MT) Device Input Module" id=8
        current calibration values (from XInput): min_x=0, max_x=4095 and min_y=0, max_y=4095

Doing dynamic recalibration:
        Inverting X and/or Y axis...
        Setting calibration data: -14, 4073, -4, 4099
        --> Making the calibration permanent <--
  Install the 'xinput' tool and copy the command(s) below in a script that starts with your X session
    xinput set-int-prop "Elo MultiTouch(MT) Device Input Module" "Evdev Axis Calibration" 32 -14 4073 -4 4099
    xinput set-int-prop "Elo MultiTouch(MT) Device Input Module" "Evdev Axes Swap" 8 0

The last two “xinput” commands need to be run somewhere every startup. Keep in mind if the USB bus resets you may lose your mapping and have to re-run the commands. You may want to trigger these commands as a udev rule. But if you're lucky you won't have to do any of this.


Actually that didn't work either. Works for some machines, not this one. So I generated X.org conf file with xinput_calibrator

$ DISPLAY=:0.0 xinput_calibrator --output-type xorg.conf.d
Calibrating EVDEV driver for "Elo MultiTouch(MT) Device Input Module" id=7
        current calibration values (from XInput): min_x=-14, max_x=4073 and min_y=-4, max_y=4099

Doing dynamic recalibration:
        Inverting X and/or Y axis...
        Setting calibration data: -19, 4080, 1, 4074
        --> Making the calibration permanent <--
  copy the snippet below into '/etc/X11/xorg.conf.d/99-calibration.conf' (/usr/share/X11/xorg.conf.d/ in some distro's)
Section "InputClass"
        Identifier      "calibration"
        MatchProduct    "Elo MultiTouch(MT) Device Input Module"
        Option  "Calibration"   "-19 4080 1 4074"
        Option  "SwapAxes"      "0"
EndSection

This tells you to put it into /etc/X11 but that's not where it's at on the Pi.
The general location is /usr/share/X11/xorg.conf.d/ 

I had to delete the file 45-evdev.conf.
I replaced the file 10-evdev.conf with this content:

Section "InputClass"
        Identifier    "Elo touchscreen Catchall evdev"
        MatchProduct    "Elo MultiTouch(MT) Device Input Module"
        MatchDevicePath    "/dev/input/event*"
        Driver    "evdev"
        Option  "Calibration"   "-14 4058 12 4115"
        Option  "SwapAxes"      "0"
EndSection


Your mileage may very… different Calibration, SwapAxes, etc.
But xinput_calibrator will usually help you find the right values to use.